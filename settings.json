{
    // this prevents menu bar from EVER showing, in addition to preventing alt key command (even with additional keys eg alt+m)
    // from ever toggling the menu bar. Everything that is accessible from the menu bar is accessible from the command pallete...user that.
    "window.menuBarVisibility": "hidden",

    "editor.mouseWheelScrollSensitivity": 5,
    // prevent Ctrl+P from showing recently opened files, since they could be from another workspace
    "search.quickOpen.includeHistory": false,

    // Controls whether opening keybinding settings also opens an editor showing all default keybindings.
    // Default is true, but this will protect against other versions setting default to false
    "workbench.settings.openDefaultKeybindings": true,

    // this setting scales the entire UI, but can make for blurry fonts, partiularily in the terminal
    // "window.zoomLevel": -1,

    "workbench.settings.useSplitJSON":true,
    // if you change zoomlevel you are going to
    // have to change fontSize and caret thickness
    "editor.cursorWidth": 5,
    
    // Determines which settings editor to use by default.
    //  - ui: Use the settings UI editor.
    //  - json: Use the JSON file editor.
    "workbench.settings.editor": "json",

    // turning this off prevents current files to be replaced by newly opened files 
    // in all situations, even when previewing from search results in side bar. This
    // is the default setting (true) but keep it here for reference
    "workbench.editor.enablePreview": true, 
    // this is similar to above, but will only disable preview on files
    // opened from Quick Open (ctrl+p)
    "workbench.editor.enablePreviewFromQuickOpen": false,
    
    // "workbench.editor.enablePreviewFromQuickOpen": false potentially this setting might be better than the above one. (time will tell)

    // prevent an editor pane from closing when you close the file that is inside it
    "workbench.editor.closeEmptyGroups": false,
    "window.closeWhenEmpty": false,

    "editor.minimap.enabled": false,
    "editor.mouseWheelZoom": true,

    // Controls whether the editor should highlight matches similar to the selection
    "editor.selectionHighlight": false,

    // VSCode automatically put here when you unclick the "Show welcome screen on startup"
    "workbench.startupEditor": "newUntitledFile",

    "workbench.settings.enableNaturalLanguageSearch": false,

    "workbench.colorCustomizations": {
        "tab.activeBorder": "#ff3300",
        "tab.unfocusedActiveBorder": "#000000"
    },

    // prevent these file types from showing up in workspaces and ctrl+p
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/*.o": true,
        "**/*.o.d": true,
        "**/*.class": true,
        "**/.classpath": true,
        "**/.project": true,
        "**/.settings": true,
        "**/.factorypath": true,
        "**/.history":true //hide history extension backups
    },

    "workbench.activityBar.visible": false,

    // all is the default setting, but keep this in here, because I can see maybe
    // not wanting this setting on it the end
    "scm.diffDecorations": "all",
    "scm.diffDecorationsGutterWidth": 1, // default is 3

    "editor.smoothScrolling": true,

    // When enabled, the notifications for extension recommendations will not be shown.
    "extensions.ignoreRecommendations": false,

    // sometimes non user snippets added by extension are cluttering my suggestions list
    // so for language extensions like Java and C++, go into the extensions folder and
    // delete the snippets folder in there
    "editor.snippetSuggestions": "top",

    // a more verbose window header title
    "window.title": "${activeEditorLong}${separator}${rootName}",

    // Controls whether suggestions should automatically show up while typing.
    "editor.quickSuggestions": {
        "other": true,
        "comments": true, // default is false
        "strings": true // default is false
    },

    "terminal.integrated.commandsToSkipShell": [
        // Ensure the toggle sidebar visibility keybinding skips the shell
        "workbench.action.toggleSidebarVisibility",
        // Send quick open's keybinding to the shell
        "-workbench.action.quickOpen",
        "workbench.action.closePanel",
        "workbench.action.focusPanel"
    ],

    // Control whether an active snippet prevents quick suggestions.
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "breadcrumbs.enabled": false,
    "editor.fontFamily": "'Inconsolata'",
    "editor.fontSize": 12,
    "debug.console.fontSize": 11,
    "editor.lineHeight": 10, // if you make this too small, error underlines get realy hard to see.

    // prevent VSCode from adding unthemed color highglights to variables
    "editor.occurrencesHighlight": false,
    //prevent vscode from dimming unused variables
    "editor.showUnused": false,
    "workbench.colorTheme": "Safire Star",
    "extension.smoothscroll.totalDelay": 150,
    "errorLens.onSave": true,
    "java.imports.gradle.wrapper.checksums": [
        {
            "sha256": "50726ef76b6599d458dd37169a6b42d86d3790c83f6065a398e3e672448d18c6",
            "allowed": true
        }
    ],
    "dart.debugExternalLibraries": true,
    "dart.debugSdkLibraries": true,
    "dart.warnWhenEditingFilesInPubCache": false,
    "dart.enableSdkFormatter": false,
    "bookmarks.navigateThroughAllFiles": false,
    "scrollFaster.scrollByLines": 8,
    "extension.smoothscroll.linesToScroll": 18,

    "[dart]": {
        "editor.formatOnSave": false,
        "editor.formatOnType": false,
        "editor.suggest.snippetsPreventQuickSuggestions": false,
        "editor.suggestSelection": "first",
        "editor.tabCompletion": "onlySnippets",
        "editor.wordBasedSuggestions": false,
    },
    "dart.lineLength": 180,
    "workbench.statusBar.visible": false,
}